---
import { FaChevronDown } from "react-icons/fa";
import TaskCard from "./TaskCard.astro";
import { paths } from "../utils/constants";
import type { CollectionEntry } from "astro:content";
import { DropdownMenuDemo } from "@/components/sidebarDropdown";

const locationPath = Astro.url.pathname;
const { slug } = Astro.params;

const renderPath = (path: string) => {
  switch (path) {
    case "/":
      return "Home";

    case "/tasks":
      return "Home/Tasks";

    case "/teams":
      return "Home/Teams";

    case `/tasks/${slug}`:
      return `Home/Tasks/${slug}`;
    default:
      break;
  }
  return "";
};

const { tasks } = Astro.props;

interface Props {
  tasks: CollectionEntry<"tasks">[];
}
---

<div class="left-0 h-screen bg-feintWhite w-[20%] fixed">
  <div class="relative flex flex-col gap-5 mt-20">
    <DropdownMenuDemo path={renderPath(locationPath)} client:load />
    <!-- <button
      id="dropdownDefaultButton"
      data-dropdown-toggle="dropdown"
      class="bg-gray-300 flex items-center gap-2 py-2 px-5"
      type="button"
      >{() => renderPath(locationPath)} <FaChevronDown />
    </button>
    <div
      id="dropdown"
      class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-52 dark:bg-gray-700 mx-10"
    >
      <ul
        class="py-2 text-sm text-gray-700 dark:text-gray-200"
        aria-labelledby="dropdownDefaultButton"
      >
        {
          paths
            .filter((currPath) => currPath.path !== locationPath)
            .map((currPath) => (
              <li>
                <a
                  href={`${currPath.path}`}
                  class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                >
                  {currPath.name}
                </a>
              </li>
            ))
        }
      </ul>
    </div> -->
    <div>
      {
        locationPath == "/tasks" && (
          <div>
            <div class="py-3 border mx-3 rounded-lg">
              <div class="border-b-2 border-gray-300 pb-3">
                <a href="/tasks" class="ml-3 text-lg text-[#4169E1]">
                  Tasks
                </a>
              </div>
              <div class="flex flex-col gap-4 mt-3 max-h-[30vh] overflow-y-auto">
                {tasks?.map((task) => (
                  <TaskCard {...task.data} />
                ))}
              </div>
            </div>
          </div>
        )
      }

      {
        locationPath == `/tasks/${slug}` && (
          <>
            <div class="border-b-2 border-gray-300 pb-3">
              <a href="/tasks" class="ml-3 text-lg text-[#4169E1]">
                Tasks
              </a>
            </div>
            <div class="text-sm pt-5 px-3 sm:max-w-[70%]">
              <h1>Mini content about the current task</h1>
            </div>
          </>
        )
      }
    </div>
  </div>
</div>
@/components/dropDown.jsx
